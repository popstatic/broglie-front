{"ast":null,"code":"import _slicedToArray from \"/var/projets/broglie-social-react/sociala-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nexport default React.memo(function Connector(_ref) {\n  var connector = _ref.connector,\n      width = _ref.width,\n      height = _ref.height;\n\n  var _connector = _slicedToArray(connector, 4),\n      x1 = _connector[0],\n      y1 = _connector[1],\n      x2 = _connector[2],\n      y2 = _connector[3];\n\n  return React.createElement(\"i\", {\n    style: {\n      position: 'absolute',\n      width: Math.max(1, (x2 - x1) * width + 1),\n      height: Math.max(1, (y2 - y1) * height + 1),\n      background: \"#999\",\n      transform: \"translate(\".concat(x1 * width, \"px, \").concat(y1 * height, \"px)\"),\n      pointerEvents: 'none'\n    }\n  });\n});","map":{"version":3,"sources":["/var/projets/broglie-social-react/sociala-react/node_modules/react-family-tree/lib/connector.js"],"names":["React","memo","Connector","connector","width","height","x1","y1","x2","y2","createElement","style","position","Math","max","background","transform","pointerEvents"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAeA,KAAK,CAACC,IAAN,CAAW,SAASC,SAAT,OAAiD;AAAA,MAA5BC,SAA4B,QAA5BA,SAA4B;AAAA,MAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,MAAVC,MAAU,QAAVA,MAAU;;AACvE,kCAAyBF,SAAzB;AAAA,MAAOG,EAAP;AAAA,MAAWC,EAAX;AAAA,MAAeC,EAAf;AAAA,MAAmBC,EAAnB;;AACA,SAAQT,KAAK,CAACU,aAAN,CAAoB,GAApB,EAAyB;AAAEC,IAAAA,KAAK,EAAE;AAClCC,MAAAA,QAAQ,EAAE,UADwB;AAElCR,MAAAA,KAAK,EAAES,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,CAACN,EAAE,GAAGF,EAAN,IAAYF,KAAZ,GAAoB,CAAhC,CAF2B;AAGlCC,MAAAA,MAAM,EAAEQ,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,CAACL,EAAE,GAAGF,EAAN,IAAYF,MAAZ,GAAqB,CAAjC,CAH0B;AAIlCU,MAAAA,UAAU,QAJwB;AAKlCC,MAAAA,SAAS,sBAAeV,EAAE,GAAGF,KAApB,iBAAgCG,EAAE,GAAGF,MAArC,QALyB;AAMlCY,MAAAA,aAAa,EAAE;AANmB;AAAT,GAAzB,CAAR;AAQH,CAVc,CAAf","sourcesContent":["import React from 'react';\nexport default React.memo(function Connector({ connector, width, height }) {\n    const [x1, y1, x2, y2] = connector;\n    return (React.createElement(\"i\", { style: {\n            position: 'absolute',\n            width: Math.max(1, (x2 - x1) * width + 1),\n            height: Math.max(1, (y2 - y1) * height + 1),\n            background: `#999`,\n            transform: `translate(${x1 * width}px, ${y1 * height}px)`,\n            pointerEvents: 'none',\n        } }));\n});\n"]},"metadata":{},"sourceType":"module"}