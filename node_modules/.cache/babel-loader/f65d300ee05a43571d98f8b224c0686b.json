{"ast":null,"code":"import { SIZE } from '../constants';\nimport { prop, withIds } from './index';\nimport { unitNodesCount } from './family';\n\nconst calcShifts = (units, ids) => units.reduce((acc, unit) => {\n  const index = unit.nodes.findIndex(withIds(ids));\n  if (index !== -1) acc.push(unit.pos + index * SIZE);\n  return acc;\n}, []);\n\nconst middle = values => {\n  const result = (values[0] + values[values.length - 1]) / 2;\n  return Number.isNaN(result) ? 0 : result;\n};\n\nexport const arrangeParentsIn = family => {\n  const unit = family.parents[0];\n\n  if (unit) {\n    const ids = unit.nodes[0].children.map(prop('id'));\n    unit.pos = Math.floor(middle(calcShifts(family.children, ids)) - (unitNodesCount(family.parents) - 1));\n  }\n};","map":{"version":3,"sources":["/var/projets/broglie-social-react/sociala-react/node_modules/relatives-tree/lib/utils/arrangeParentsIn.js"],"names":["SIZE","prop","withIds","unitNodesCount","calcShifts","units","ids","reduce","acc","unit","index","nodes","findIndex","push","pos","middle","values","result","length","Number","isNaN","arrangeParentsIn","family","parents","children","map","Math","floor"],"mappings":"AAAA,SAASA,IAAT,QAAqB,cAArB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,SAA9B;AACA,SAASC,cAAT,QAA+B,UAA/B;;AACA,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAiBD,KAAK,CAACE,MAAN,CAAa,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC5D,QAAMC,KAAK,GAAGD,IAAI,CAACE,KAAL,CAAWC,SAAX,CAAqBV,OAAO,CAACI,GAAD,CAA5B,CAAd;AACA,MAAII,KAAK,KAAK,CAAC,CAAf,EACIF,GAAG,CAACK,IAAJ,CAASJ,IAAI,CAACK,GAAL,GAAYJ,KAAK,GAAGV,IAA7B;AACJ,SAAOQ,GAAP;AACH,CALmC,EAKjC,EALiC,CAApC;;AAMA,MAAMO,MAAM,GAAIC,MAAD,IAAY;AACvB,QAAMC,MAAM,GAAG,CAACD,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAACA,MAAM,CAACE,MAAP,GAAgB,CAAjB,CAAnB,IAA0C,CAAzD;AACA,SAAOC,MAAM,CAACC,KAAP,CAAaH,MAAb,IAAuB,CAAvB,GAA2BA,MAAlC;AACH,CAHD;;AAIA,OAAO,MAAMI,gBAAgB,GAAIC,MAAD,IAAY;AACxC,QAAMb,IAAI,GAAGa,MAAM,CAACC,OAAP,CAAe,CAAf,CAAb;;AACA,MAAId,IAAJ,EAAU;AACN,UAAMH,GAAG,GAAGG,IAAI,CAACE,KAAL,CAAW,CAAX,EAAca,QAAd,CAAuBC,GAAvB,CAA2BxB,IAAI,CAAC,IAAD,CAA/B,CAAZ;AACAQ,IAAAA,IAAI,CAACK,GAAL,GAAWY,IAAI,CAACC,KAAL,CAAWZ,MAAM,CAACX,UAAU,CAACkB,MAAM,CAACE,QAAR,EAAkBlB,GAAlB,CAAX,CAAN,IACjBH,cAAc,CAACmB,MAAM,CAACC,OAAR,CAAd,GAAiC,CADhB,CAAX,CAAX;AAEH;AACJ,CAPM","sourcesContent":["import { SIZE } from '../constants';\nimport { prop, withIds } from './index';\nimport { unitNodesCount } from './family';\nconst calcShifts = (units, ids) => (units.reduce((acc, unit) => {\n    const index = unit.nodes.findIndex(withIds(ids));\n    if (index !== -1)\n        acc.push(unit.pos + (index * SIZE));\n    return acc;\n}, []));\nconst middle = (values) => {\n    const result = (values[0] + values[values.length - 1]) / 2;\n    return Number.isNaN(result) ? 0 : result;\n};\nexport const arrangeParentsIn = (family) => {\n    const unit = family.parents[0];\n    if (unit) {\n        const ids = unit.nodes[0].children.map(prop('id'));\n        unit.pos = Math.floor(middle(calcShifts(family.children, ids)) -\n            (unitNodesCount(family.parents) - 1));\n    }\n};\n"]},"metadata":{},"sourceType":"module"}