{"ast":null,"code":"import { withType } from '../utils/family';\nimport { hasChildren, nodeIds } from '../utils/units';\nimport { FamilyType } from '../types';\nimport { createFamilyFunc } from './create';\nimport { updateFamilyFunc } from './update';\nimport { arrangeFamiliesFunc } from './arrange';\n\nconst getUnitsWithChildren = family => family.children.filter(hasChildren).reverse();\n\nexport const inChildDirection = store => {\n  const createFamily = createFamilyFunc(store);\n  const updateFamily = updateFamilyFunc(store);\n  const arrangeFamilies = arrangeFamiliesFunc(store);\n  store.familiesArray.filter(withType(FamilyType.root)).forEach(rootFamily => {\n    let stack = getUnitsWithChildren(rootFamily);\n\n    while (stack.length) {\n      const parentUnit = stack.pop();\n      const family = createFamily(nodeIds(parentUnit), FamilyType.child);\n      updateFamily(family, parentUnit);\n      arrangeFamilies(family);\n      store.families.set(family.id, family);\n      stack = stack.concat(getUnitsWithChildren(family));\n    }\n  });\n  return store;\n};","map":{"version":3,"sources":["/var/projets/broglie-social-react/sociala-react/node_modules/relatives-tree/lib/children/index.js"],"names":["withType","hasChildren","nodeIds","FamilyType","createFamilyFunc","updateFamilyFunc","arrangeFamiliesFunc","getUnitsWithChildren","family","children","filter","reverse","inChildDirection","store","createFamily","updateFamily","arrangeFamilies","familiesArray","root","forEach","rootFamily","stack","length","parentUnit","pop","child","families","set","id","concat"],"mappings":"AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,gBAArC;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,gBAAT,QAAiC,UAAjC;AACA,SAASC,gBAAT,QAAiC,UAAjC;AACA,SAASC,mBAAT,QAAoC,WAApC;;AACA,MAAMC,oBAAoB,GAAIC,MAAD,IAAaA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBT,WAAvB,EAAoCU,OAApC,EAA1C;;AACA,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AACvC,QAAMC,YAAY,GAAGV,gBAAgB,CAACS,KAAD,CAArC;AACA,QAAME,YAAY,GAAGV,gBAAgB,CAACQ,KAAD,CAArC;AACA,QAAMG,eAAe,GAAGV,mBAAmB,CAACO,KAAD,CAA3C;AACAA,EAAAA,KAAK,CAACI,aAAN,CACKP,MADL,CACYV,QAAQ,CAACG,UAAU,CAACe,IAAZ,CADpB,EAEKC,OAFL,CAEcC,UAAD,IAAgB;AACzB,QAAIC,KAAK,GAAGd,oBAAoB,CAACa,UAAD,CAAhC;;AACA,WAAOC,KAAK,CAACC,MAAb,EAAqB;AACjB,YAAMC,UAAU,GAAGF,KAAK,CAACG,GAAN,EAAnB;AACA,YAAMhB,MAAM,GAAGM,YAAY,CAACZ,OAAO,CAACqB,UAAD,CAAR,EAAsBpB,UAAU,CAACsB,KAAjC,CAA3B;AACAV,MAAAA,YAAY,CAACP,MAAD,EAASe,UAAT,CAAZ;AACAP,MAAAA,eAAe,CAACR,MAAD,CAAf;AACAK,MAAAA,KAAK,CAACa,QAAN,CAAeC,GAAf,CAAmBnB,MAAM,CAACoB,EAA1B,EAA8BpB,MAA9B;AACAa,MAAAA,KAAK,GAAGA,KAAK,CAACQ,MAAN,CAAatB,oBAAoB,CAACC,MAAD,CAAjC,CAAR;AACH;AACJ,GAZD;AAaA,SAAOK,KAAP;AACH,CAlBM","sourcesContent":["import { withType } from '../utils/family';\nimport { hasChildren, nodeIds } from '../utils/units';\nimport { FamilyType } from '../types';\nimport { createFamilyFunc } from './create';\nimport { updateFamilyFunc } from './update';\nimport { arrangeFamiliesFunc } from './arrange';\nconst getUnitsWithChildren = (family) => (family.children.filter(hasChildren).reverse());\nexport const inChildDirection = (store) => {\n    const createFamily = createFamilyFunc(store);\n    const updateFamily = updateFamilyFunc(store);\n    const arrangeFamilies = arrangeFamiliesFunc(store);\n    store.familiesArray\n        .filter(withType(FamilyType.root))\n        .forEach((rootFamily) => {\n        let stack = getUnitsWithChildren(rootFamily);\n        while (stack.length) {\n            const parentUnit = stack.pop();\n            const family = createFamily(nodeIds(parentUnit), FamilyType.child);\n            updateFamily(family, parentUnit);\n            arrangeFamilies(family);\n            store.families.set(family.id, family);\n            stack = stack.concat(getUnitsWithChildren(family));\n        }\n    });\n    return store;\n};\n"]},"metadata":{},"sourceType":"module"}