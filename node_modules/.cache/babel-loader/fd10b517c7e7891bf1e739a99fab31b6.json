{"ast":null,"code":"var _jsxFileName = \"/var/projets/broglie-social-react/sociala-react/src/components/Familytree/ContactUsDialog.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport FormContent from \"./ContactUsDialogForm\";\nimport { Dialog } from \"@reach/dialog\";\nimport \"@reach/dialog/styles.css\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/React.createContext();\nexport const useContactUsDialog = () => {\n  _s();\n\n  return React.useContext(Context);\n};\n\n_s(useContactUsDialog, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nconst initalState = {\n  isOpen: false,\n  node: null\n};\nconst initialValues = {\n  name: \"\",\n  email: \"\",\n  message: \"\"\n};\n\nfunction reducer(state, _ref) {\n  let {\n    type,\n    payload\n  } = _ref;\n\n  switch (type) {\n    case \"open\":\n      {\n        return { ...state,\n          isOpen: true,\n          node: payload\n        };\n      }\n\n    case \"close\":\n      {\n        return {\n          isOpen: false,\n          node: null\n        };\n      }\n\n    default:\n      throw new Error(`invalid action type '${type}'`);\n  }\n}\n\nexport default function (props) {\n  const [state, dispatch] = React.useReducer(reducer, initalState);\n  const value = React.useMemo(() => {\n    return {\n      openContactUs(node) {\n        dispatch({\n          type: \"open\",\n          payload: node\n        });\n      }\n\n    };\n  }, []);\n  const handleSubmit = React.useCallback(values => {\n    var _state$node;\n\n    axios.get(`//sherut-leumi.co.il/datiot/ddmail.aspx?sendername=${values.name}&senderemail=${values.email}&personname=${(state === null || state === void 0 ? void 0 : (_state$node = state.node) === null || _state$node === void 0 ? void 0 : _state$node.name) || \"\"}&message=${values.message}`).then(() => {\n      dispatch({\n        type: \"close\"\n      });\n      toast(\"תודה\");\n    }).catch(e => {\n      console.log(e);\n    });\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Context.Provider, { ...props,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      isOpen: state.isOpen,\n      onDismiss: () => dispatch({\n        type: \"close\"\n      }),\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        onSubmit: handleSubmit,\n        children: () => /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(FormContent, {\n            node: state.node\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      autoClose: 4000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/var/projets/broglie-social-react/sociala-react/src/components/Familytree/ContactUsDialog.js"],"names":["React","Formik","Form","FormContent","Dialog","axios","ToastContainer","toast","Context","createContext","useContactUsDialog","useContext","initalState","isOpen","node","initialValues","name","email","message","reducer","state","type","payload","Error","props","dispatch","useReducer","value","useMemo","openContactUs","handleSubmit","useCallback","values","get","then","catch","e","console","log"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport FormContent from \"./ContactUsDialogForm\";\nimport { Dialog } from \"@reach/dialog\";\nimport \"@reach/dialog/styles.css\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Context = React.createContext();\n\nexport const useContactUsDialog = () => React.useContext(Context);\n\nconst initalState = {\n  isOpen: false,\n  node: null\n};\n\nconst initialValues = {\n  name: \"\",\n  email: \"\",\n  message: \"\"\n};\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case \"open\": {\n      return {\n        ...state,\n        isOpen: true,\n        node: payload\n      };\n    }\n\n    case \"close\": {\n      return {\n        isOpen: false,\n        node: null\n      };\n    }\n\n    default:\n      throw new Error(`invalid action type '${type}'`);\n  }\n}\n\nexport default function(props) {\n  const [state, dispatch] = React.useReducer(reducer, initalState);\n\n  const value = React.useMemo(() => {\n    return {\n      openContactUs(node) {\n        dispatch({ type: \"open\", payload: node });\n      }\n    };\n  }, []);\n\n  const handleSubmit = React.useCallback(\n    values => {\n      axios\n        .get(\n          `//sherut-leumi.co.il/datiot/ddmail.aspx?sendername=${\n            values.name\n          }&senderemail=${values.email}&personname=${state?.node?.name ||\n            \"\"}&message=${values.message}`\n        )\n        .then(() => {\n          dispatch({ type: \"close\" });\n          toast(\"תודה\");\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n    [state]\n  );\n\n  return (\n    <>\n      <Context.Provider {...props} value={value} />\n      <Dialog\n        isOpen={state.isOpen}\n        onDismiss={() => dispatch({ type: \"close\" })}\n      >\n        <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n          {() => (\n            <Form>\n              <FormContent node={state.node} />\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n      <ToastContainer autoClose={4000} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}