{"ast":null,"code":"import { nodeIds } from '../utils/units';\nimport { createFamilyFunc } from './create';\nimport { updateFamilyFunc } from './update';\nimport { arrangeFamiliesFunc } from './arrange';\n\nconst getParentUnitsWithParents = family => family.parents.filter(unit => unit.nodes.some(node => !!node.parents.length));\n\nexport const inParentDirection = store => {\n  const createFamily = createFamilyFunc(store);\n  const updateFamily = updateFamilyFunc(store);\n  const arrangeFamily = arrangeFamiliesFunc(store);\n  let stack = getParentUnitsWithParents(store.rootFamily);\n\n  while (stack.length) {\n    const childUnit = stack.pop();\n    const family = createFamily(nodeIds(childUnit));\n    updateFamily(family, childUnit);\n    arrangeFamily(family);\n    store.families.set(family.id, family);\n    stack = stack.concat(getParentUnitsWithParents(family));\n  }\n\n  return store;\n};","map":{"version":3,"sources":["/var/projets/broglie-social-react/sociala-react/node_modules/relatives-tree/lib/parents/index.js"],"names":["nodeIds","createFamilyFunc","updateFamilyFunc","arrangeFamiliesFunc","getParentUnitsWithParents","family","parents","filter","unit","nodes","some","node","length","inParentDirection","store","createFamily","updateFamily","arrangeFamily","stack","rootFamily","childUnit","pop","families","set","id","concat"],"mappings":"AAAA,SAASA,OAAT,QAAwB,gBAAxB;AACA,SAASC,gBAAT,QAAiC,UAAjC;AACA,SAASC,gBAAT,QAAiC,UAAjC;AACA,SAASC,mBAAT,QAAoC,WAApC;;AACA,MAAMC,yBAAyB,GAAIC,MAAD,IAAaA,MAAM,CAACC,OAAP,CAAeC,MAAf,CAAsBC,IAAI,IAAKA,IAAI,CAACC,KAAL,CAAWC,IAAX,CAAgBC,IAAI,IAAI,CAAC,CAACA,IAAI,CAACL,OAAL,CAAaM,MAAvC,CAA/B,CAA/C;;AACA,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACxC,QAAMC,YAAY,GAAGd,gBAAgB,CAACa,KAAD,CAArC;AACA,QAAME,YAAY,GAAGd,gBAAgB,CAACY,KAAD,CAArC;AACA,QAAMG,aAAa,GAAGd,mBAAmB,CAACW,KAAD,CAAzC;AACA,MAAII,KAAK,GAAGd,yBAAyB,CAACU,KAAK,CAACK,UAAP,CAArC;;AACA,SAAOD,KAAK,CAACN,MAAb,EAAqB;AACjB,UAAMQ,SAAS,GAAGF,KAAK,CAACG,GAAN,EAAlB;AACA,UAAMhB,MAAM,GAAGU,YAAY,CAACf,OAAO,CAACoB,SAAD,CAAR,CAA3B;AACAJ,IAAAA,YAAY,CAACX,MAAD,EAASe,SAAT,CAAZ;AACAH,IAAAA,aAAa,CAACZ,MAAD,CAAb;AACAS,IAAAA,KAAK,CAACQ,QAAN,CAAeC,GAAf,CAAmBlB,MAAM,CAACmB,EAA1B,EAA8BnB,MAA9B;AACAa,IAAAA,KAAK,GAAGA,KAAK,CAACO,MAAN,CAAarB,yBAAyB,CAACC,MAAD,CAAtC,CAAR;AACH;;AACD,SAAOS,KAAP;AACH,CAdM","sourcesContent":["import { nodeIds } from '../utils/units';\nimport { createFamilyFunc } from './create';\nimport { updateFamilyFunc } from './update';\nimport { arrangeFamiliesFunc } from './arrange';\nconst getParentUnitsWithParents = (family) => (family.parents.filter(unit => (unit.nodes.some(node => !!node.parents.length))));\nexport const inParentDirection = (store) => {\n    const createFamily = createFamilyFunc(store);\n    const updateFamily = updateFamilyFunc(store);\n    const arrangeFamily = arrangeFamiliesFunc(store);\n    let stack = getParentUnitsWithParents(store.rootFamily);\n    while (stack.length) {\n        const childUnit = stack.pop();\n        const family = createFamily(nodeIds(childUnit));\n        updateFamily(family, childUnit);\n        arrangeFamily(family);\n        store.families.set(family.id, family);\n        stack = stack.concat(getParentUnitsWithParents(family));\n    }\n    return store;\n};\n"]},"metadata":{},"sourceType":"module"}