{"ast":null,"code":"import { SIZE } from '../constants';\nimport { max } from './index';\nimport { getUnitX, nodeCount, rightSide } from './units';\nexport const newFamily = function (id, type) {\n  let main = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return {\n    id,\n    type,\n    main,\n    Y: 0,\n    X: 0,\n    parents: [],\n    children: []\n  };\n};\nexport const withType = function () {\n  for (var _len = arguments.length, types = new Array(_len), _key = 0; _key < _len; _key++) {\n    types[_key] = arguments[_key];\n  }\n\n  return item => types.includes(item.type);\n};\nexport const widthOf = family => max([...family.parents, ...family.children].map(rightSide));\nexport const heightOf = family => [family.parents.length, family.children.length].filter(Boolean).length * SIZE;\nexport const rightOf = family => family.X + widthOf(family);\nexport const bottomOf = family => family.Y + heightOf(family);\nexport const unitNodesCount = units => units.reduce((acc, b) => acc + nodeCount(b), 0);\nexport const getParentsX = (family, unit) => {\n  return unit ? getUnitX(family, unit) + nodeCount(unit) : 0;\n};","map":{"version":3,"sources":["/var/projets/broglie-social-react/sociala-react/node_modules/relatives-tree/lib/utils/family.js"],"names":["SIZE","max","getUnitX","nodeCount","rightSide","newFamily","id","type","main","Y","X","parents","children","withType","types","item","includes","widthOf","family","map","heightOf","length","filter","Boolean","rightOf","bottomOf","unitNodesCount","units","reduce","acc","b","getParentsX","unit"],"mappings":"AAAA,SAASA,IAAT,QAAqB,cAArB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,SAA9B,QAA+C,SAA/C;AACA,OAAO,MAAMC,SAAS,GAAG,UAACC,EAAD,EAAKC,IAAL;AAAA,MAAWC,IAAX,uEAAkB,KAAlB;AAAA,SAA6B;AAClDF,IAAAA,EADkD;AAElDC,IAAAA,IAFkD;AAGlDC,IAAAA,IAHkD;AAIlDC,IAAAA,CAAC,EAAE,CAJ+C;AAKlDC,IAAAA,CAAC,EAAE,CAL+C;AAMlDC,IAAAA,OAAO,EAAE,EANyC;AAOlDC,IAAAA,QAAQ,EAAE;AAPwC,GAA7B;AAAA,CAAlB;AASP,OAAO,MAAMC,QAAQ,GAAG;AAAA,oCAAIC,KAAJ;AAAIA,IAAAA,KAAJ;AAAA;;AAAA,SAAeC,IAAD,IAAUD,KAAK,CAACE,QAAN,CAAeD,IAAI,CAACR,IAApB,CAAxB;AAAA,CAAjB;AACP,OAAO,MAAMU,OAAO,GAAIC,MAAD,IAAYjB,GAAG,CAAC,CAAC,GAAGiB,MAAM,CAACP,OAAX,EAAoB,GAAGO,MAAM,CAACN,QAA9B,EAAwCO,GAAxC,CAA4Cf,SAA5C,CAAD,CAA/B;AACP,OAAO,MAAMgB,QAAQ,GAAIF,MAAD,IAAY,CAChCA,MAAM,CAACP,OAAP,CAAeU,MADiB,EAEhCH,MAAM,CAACN,QAAP,CAAgBS,MAFgB,EAGlCC,MAHkC,CAG3BC,OAH2B,EAGlBF,MAHkB,GAGTrB,IAHpB;AAIP,OAAO,MAAMwB,OAAO,GAAIN,MAAD,IAAYA,MAAM,CAACR,CAAP,GAAWO,OAAO,CAACC,MAAD,CAA9C;AACP,OAAO,MAAMO,QAAQ,GAAIP,MAAD,IAAYA,MAAM,CAACT,CAAP,GAAWW,QAAQ,CAACF,MAAD,CAAhD;AACP,OAAO,MAAMQ,cAAc,GAAIC,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAa,CAACC,GAAD,EAAMC,CAAN,KAAYD,GAAG,GAAG1B,SAAS,CAAC2B,CAAD,CAAxC,EAA6C,CAA7C,CAAlC;AACP,OAAO,MAAMC,WAAW,GAAG,CAACb,MAAD,EAASc,IAAT,KAAkB;AACzC,SAAOA,IAAI,GAAG9B,QAAQ,CAACgB,MAAD,EAASc,IAAT,CAAR,GAAyB7B,SAAS,CAAC6B,IAAD,CAArC,GAA8C,CAAzD;AACH,CAFM","sourcesContent":["import { SIZE } from '../constants';\nimport { max } from './index';\nimport { getUnitX, nodeCount, rightSide } from './units';\nexport const newFamily = (id, type, main = false) => ({\n    id,\n    type,\n    main,\n    Y: 0,\n    X: 0,\n    parents: [],\n    children: [],\n});\nexport const withType = (...types) => (item) => types.includes(item.type);\nexport const widthOf = (family) => max([...family.parents, ...family.children].map(rightSide));\nexport const heightOf = (family) => [\n    family.parents.length,\n    family.children.length,\n].filter(Boolean).length * SIZE;\nexport const rightOf = (family) => family.X + widthOf(family);\nexport const bottomOf = (family) => family.Y + heightOf(family);\nexport const unitNodesCount = (units) => units.reduce((acc, b) => acc + nodeCount(b), 0);\nexport const getParentsX = (family, unit) => {\n    return unit ? getUnitX(family, unit) + nodeCount(unit) : 0;\n};\n"]},"metadata":{},"sourceType":"module"}