{"ast":null,"code":"import { byGender, prop } from '../utils';\nimport { arrangeInOrder, newUnit } from '../utils/units';\nimport { newFamily } from '../utils/family';\nimport { FamilyType } from '../types';\n\nconst getParentUnits = (store, unit) => unit.nodes.reduce((units, child) => {\n  const parents = store.getNodes(child.parents.map(prop('id'))).sort(byGender(store.root.gender));\n  if (parents.length) units.push(newUnit(unit.fid, parents));\n  return units;\n}, []);\n\nconst setDefaultUnitShift = family => {\n  arrangeInOrder(family.children);\n  arrangeInOrder(family.parents);\n};\n\nexport const createFamilyFunc = store => {\n  return childIDs => {\n    const family = newFamily(store.getNextId(), FamilyType.parent);\n    const childUnit = newUnit(family.id, store.getNodes(childIDs), true);\n    family.children = [childUnit];\n    family.parents = getParentUnits(store, childUnit);\n    setDefaultUnitShift(family);\n    return family;\n  };\n};","map":{"version":3,"sources":["/var/projets/broglie-social-react/sociala-react/node_modules/relatives-tree/lib/parents/create.js"],"names":["byGender","prop","arrangeInOrder","newUnit","newFamily","FamilyType","getParentUnits","store","unit","nodes","reduce","units","child","parents","getNodes","map","sort","root","gender","length","push","fid","setDefaultUnitShift","family","children","createFamilyFunc","childIDs","getNextId","parent","childUnit","id"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,IAAnB,QAA+B,UAA/B;AACA,SAASC,cAAT,EAAyBC,OAAzB,QAAwC,gBAAxC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,UAAT,QAA2B,UAA3B;;AACA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAkBA,IAAI,CAACC,KAAL,CAAWC,MAAX,CAAkB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACzE,QAAMC,OAAO,GAAGN,KAAK,CAChBO,QADW,CACFF,KAAK,CAACC,OAAN,CAAcE,GAAd,CAAkBd,IAAI,CAAC,IAAD,CAAtB,CADE,EAEXe,IAFW,CAENhB,QAAQ,CAACO,KAAK,CAACU,IAAN,CAAWC,MAAZ,CAFF,CAAhB;AAGA,MAAIL,OAAO,CAACM,MAAZ,EACIR,KAAK,CAACS,IAAN,CAAWjB,OAAO,CAACK,IAAI,CAACa,GAAN,EAAWR,OAAX,CAAlB;AACJ,SAAOF,KAAP;AACH,CAPwC,EAOtC,EAPsC,CAAzC;;AAQA,MAAMW,mBAAmB,GAAIC,MAAD,IAAY;AACpCrB,EAAAA,cAAc,CAACqB,MAAM,CAACC,QAAR,CAAd;AACAtB,EAAAA,cAAc,CAACqB,MAAM,CAACV,OAAR,CAAd;AACH,CAHD;;AAIA,OAAO,MAAMY,gBAAgB,GAAIlB,KAAD,IAAW;AACvC,SAAQmB,QAAD,IAAc;AACjB,UAAMH,MAAM,GAAGnB,SAAS,CAACG,KAAK,CAACoB,SAAN,EAAD,EAAoBtB,UAAU,CAACuB,MAA/B,CAAxB;AACA,UAAMC,SAAS,GAAG1B,OAAO,CAACoB,MAAM,CAACO,EAAR,EAAYvB,KAAK,CAACO,QAAN,CAAeY,QAAf,CAAZ,EAAsC,IAAtC,CAAzB;AACAH,IAAAA,MAAM,CAACC,QAAP,GAAkB,CAACK,SAAD,CAAlB;AACAN,IAAAA,MAAM,CAACV,OAAP,GAAiBP,cAAc,CAACC,KAAD,EAAQsB,SAAR,CAA/B;AACAP,IAAAA,mBAAmB,CAACC,MAAD,CAAnB;AACA,WAAOA,MAAP;AACH,GAPD;AAQH,CATM","sourcesContent":["import { byGender, prop } from '../utils';\nimport { arrangeInOrder, newUnit } from '../utils/units';\nimport { newFamily } from '../utils/family';\nimport { FamilyType } from '../types';\nconst getParentUnits = (store, unit) => (unit.nodes.reduce((units, child) => {\n    const parents = store\n        .getNodes(child.parents.map(prop('id')))\n        .sort(byGender(store.root.gender));\n    if (parents.length)\n        units.push(newUnit(unit.fid, parents));\n    return units;\n}, []));\nconst setDefaultUnitShift = (family) => {\n    arrangeInOrder(family.children);\n    arrangeInOrder(family.parents);\n};\nexport const createFamilyFunc = (store) => {\n    return (childIDs) => {\n        const family = newFamily(store.getNextId(), FamilyType.parent);\n        const childUnit = newUnit(family.id, store.getNodes(childIDs), true);\n        family.children = [childUnit];\n        family.parents = getParentUnits(store, childUnit);\n        setDefaultUnitShift(family);\n        return family;\n    };\n};\n"]},"metadata":{},"sourceType":"module"}