{"ast":null,"code":"import { hasDiffParents } from '../utils';\nimport { rightOf } from '../utils/family';\nimport { createBloodFamilies, createDiffTypeFamilies, createFamilyWithoutParents } from './create';\n\nconst arrangeFamilies = families => {\n  for (let i = 1; i < families.length; i++) {\n    families[i].X = rightOf(families[i - 1]);\n  }\n};\n\nexport const inMiddleDirection = store => {\n  const families = store.root.parents.length ? hasDiffParents(store.root) ? createDiffTypeFamilies(store) : createBloodFamilies(store) : createFamilyWithoutParents(store);\n  arrangeFamilies(families);\n  families.forEach(family => store.families.set(family.id, family));\n  return store;\n};","map":{"version":3,"sources":["/var/projets/broglie-social-react/sociala-react/node_modules/relatives-tree/lib/middle/index.js"],"names":["hasDiffParents","rightOf","createBloodFamilies","createDiffTypeFamilies","createFamilyWithoutParents","arrangeFamilies","families","i","length","X","inMiddleDirection","store","root","parents","forEach","family","set","id"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,mBAAT,EAA8BC,sBAA9B,EAAsDC,0BAAtD,QAAwF,UAAxF;;AACA,MAAMC,eAAe,GAAIC,QAAD,IAAc;AAClC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACE,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCD,IAAAA,QAAQ,CAACC,CAAD,CAAR,CAAYE,CAAZ,GAAgBR,OAAO,CAACK,QAAQ,CAACC,CAAC,GAAG,CAAL,CAAT,CAAvB;AACH;AACJ,CAJD;;AAKA,OAAO,MAAMG,iBAAiB,GAAIC,KAAD,IAAW;AACxC,QAAML,QAAQ,GAAGK,KAAK,CAACC,IAAN,CAAWC,OAAX,CAAmBL,MAAnB,GACVR,cAAc,CAACW,KAAK,CAACC,IAAP,CAAf,GACIT,sBAAsB,CAACQ,KAAD,CAD1B,GAEIT,mBAAmB,CAACS,KAAD,CAHZ,GAIXP,0BAA0B,CAACO,KAAD,CAJhC;AAKAN,EAAAA,eAAe,CAACC,QAAD,CAAf;AACAA,EAAAA,QAAQ,CAACQ,OAAT,CAAiBC,MAAM,IAAIJ,KAAK,CAACL,QAAN,CAAeU,GAAf,CAAmBD,MAAM,CAACE,EAA1B,EAA8BF,MAA9B,CAA3B;AACA,SAAOJ,KAAP;AACH,CATM","sourcesContent":["import { hasDiffParents } from '../utils';\nimport { rightOf } from '../utils/family';\nimport { createBloodFamilies, createDiffTypeFamilies, createFamilyWithoutParents } from './create';\nconst arrangeFamilies = (families) => {\n    for (let i = 1; i < families.length; i++) {\n        families[i].X = rightOf(families[i - 1]);\n    }\n};\nexport const inMiddleDirection = (store) => {\n    const families = store.root.parents.length\n        ? (hasDiffParents(store.root))\n            ? createDiffTypeFamilies(store)\n            : createBloodFamilies(store)\n        : createFamilyWithoutParents(store);\n    arrangeFamilies(families);\n    families.forEach(family => store.families.set(family.id, family));\n    return store;\n};\n"]},"metadata":{},"sourceType":"module"}