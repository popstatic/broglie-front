{"ast":null,"code":"import { SIZE } from '../constants';\nimport { prop, withIds } from './index';\nimport { unitNodesCount } from './family';\n\nvar calcShifts = function calcShifts(units, ids) {\n  return units.reduce(function (acc, unit) {\n    var index = unit.nodes.findIndex(withIds(ids));\n    if (index !== -1) acc.push(unit.pos + index * SIZE);\n    return acc;\n  }, []);\n};\n\nvar middle = function middle(values) {\n  var result = (values[0] + values[values.length - 1]) / 2;\n  return Number.isNaN(result) ? 0 : result;\n};\n\nexport var arrangeParentsIn = function arrangeParentsIn(family) {\n  var unit = family.parents[0];\n\n  if (unit) {\n    var ids = unit.nodes[0].children.map(prop('id'));\n    unit.pos = Math.floor(middle(calcShifts(family.children, ids)) - (unitNodesCount(family.parents) - 1));\n  }\n};","map":{"version":3,"sources":["/var/projets/broglie-social-react/sociala-react/node_modules/relatives-tree/lib/utils/arrangeParentsIn.js"],"names":["SIZE","prop","withIds","unitNodesCount","calcShifts","units","ids","reduce","acc","unit","index","nodes","findIndex","push","pos","middle","values","result","length","Number","isNaN","arrangeParentsIn","family","parents","children","map","Math","floor"],"mappings":"AAAA,SAASA,IAAT,QAAqB,cAArB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,SAA9B;AACA,SAASC,cAAT,QAA+B,UAA/B;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQC,GAAR;AAAA,SAAiBD,KAAK,CAACE,MAAN,CAAa,UAACC,GAAD,EAAMC,IAAN,EAAe;AAC5D,QAAMC,KAAK,GAAGD,IAAI,CAACE,KAAL,CAAWC,SAAX,CAAqBV,OAAO,CAACI,GAAD,CAA5B,CAAd;AACA,QAAII,KAAK,KAAK,CAAC,CAAf,EACIF,GAAG,CAACK,IAAJ,CAASJ,IAAI,CAACK,GAAL,GAAYJ,KAAK,GAAGV,IAA7B;AACJ,WAAOQ,GAAP;AACH,GALmC,EAKjC,EALiC,CAAjB;AAAA,CAAnB;;AAMA,IAAMO,MAAM,GAAG,SAATA,MAAS,CAACC,MAAD,EAAY;AACvB,MAAMC,MAAM,GAAG,CAACD,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAACA,MAAM,CAACE,MAAP,GAAgB,CAAjB,CAAnB,IAA0C,CAAzD;AACA,SAAOC,MAAM,CAACC,KAAP,CAAaH,MAAb,IAAuB,CAAvB,GAA2BA,MAAlC;AACH,CAHD;;AAIA,OAAO,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAAY;AACxC,MAAMb,IAAI,GAAGa,MAAM,CAACC,OAAP,CAAe,CAAf,CAAb;;AACA,MAAId,IAAJ,EAAU;AACN,QAAMH,GAAG,GAAGG,IAAI,CAACE,KAAL,CAAW,CAAX,EAAca,QAAd,CAAuBC,GAAvB,CAA2BxB,IAAI,CAAC,IAAD,CAA/B,CAAZ;AACAQ,IAAAA,IAAI,CAACK,GAAL,GAAWY,IAAI,CAACC,KAAL,CAAWZ,MAAM,CAACX,UAAU,CAACkB,MAAM,CAACE,QAAR,EAAkBlB,GAAlB,CAAX,CAAN,IACjBH,cAAc,CAACmB,MAAM,CAACC,OAAR,CAAd,GAAiC,CADhB,CAAX,CAAX;AAEH;AACJ,CAPM","sourcesContent":["import { SIZE } from '../constants';\nimport { prop, withIds } from './index';\nimport { unitNodesCount } from './family';\nconst calcShifts = (units, ids) => (units.reduce((acc, unit) => {\n    const index = unit.nodes.findIndex(withIds(ids));\n    if (index !== -1)\n        acc.push(unit.pos + (index * SIZE));\n    return acc;\n}, []));\nconst middle = (values) => {\n    const result = (values[0] + values[values.length - 1]) / 2;\n    return Number.isNaN(result) ? 0 : result;\n};\nexport const arrangeParentsIn = (family) => {\n    const unit = family.parents[0];\n    if (unit) {\n        const ids = unit.nodes[0].children.map(prop('id'));\n        unit.pos = Math.floor(middle(calcShifts(family.children, ids)) -\n            (unitNodesCount(family.parents) - 1));\n    }\n};\n"]},"metadata":{},"sourceType":"module"}